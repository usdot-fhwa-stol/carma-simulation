<?xml version="1.0"?>
<!--
  Copyright (C) 2018-2020 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
	Launch file for launching the nodes in the CARMA guidance stack
-->
<launch>


  <!-- Arguments -->
  <arg name="route_file_folder" default="$(find carma)/routes" doc="Path of folder containing routes to load"/>
  
  <!-- Remap topics from external packages -->
  <remap from="heading" to="$(optenv CARMA_INTR_NS)/gnss/heading_raw"/>
  <remap from="nav_sat_fix" to="$(optenv CARMA_INTR_NS)/gnss/fix_raw"/>
  <remap from="velocity" to="$(optenv CARMA_INTR_NS)/gnss/vel_raw"/>
  
  <remap from="/republish/cmd_lateral" to="$(optenv CARMA_INTR_NS)/controller/cmd_lateral"/>
  <remap from="/republish/cmd_longitudinal_effort" to="$(optenv CARMA_INTR_NS)/controller/cmd_longitudinal_effort"/>
  <remap from="/republish/cmd_speed" to="$(optenv CARMA_INTR_NS)/controller/cmd_speed"/>
  <remap from="robot_enabled" to="$(optenv CARMA_INTR_NS)/controller/robot_enabled"/>
  <remap from="robot_status" to="$(optenv CARMA_INTR_NS)/controller/robot_status"/>
  <remap from="/controller/cmd_lateral" to="$(optenv CARMA_INTR_NS)/controller/cmd_lateral"/>
  <remap from="/controller/cmd_longitudinal_effort" to="$(optenv CARMA_INTR_NS)/controller/cmd_longitudinal_effort"/>
  <remap from="/controller/cmd_speed" to="$(optenv CARMA_INTR_NS)/controller/cmd_speed"/>
  <remap from="enable_robotic" to="$(optenv CARMA_INTR_NS)/controller/enable_robotic"/>

  <remap from="ui_instructions" to="$(optenv CARMA_UI_NS)/ui_instructions"/>

  <!-- TODO Look into if there is a better way for handling global prameters -->
  <remap from="~vehicle_id" to="/vehicle_id"/> 
  <remap from="vehicle_state_machine_type" to="/vehicle_state_machine_type"/> 
  <remap from="vehicle_length" to="/vehicle_length"/> 
  <remap from="vehicle_width" to="/vehicle_width"/> 

  <remap from="system_alert" to="/system_alert"/>

  <remap from="/base/lane_waypoints_raw" to="base/lane_waypoints_raw"/>       
  <remap from="/lane_waypoints_array" to="lane_waypoints_array"/>
  <remap from="/traffic_waypoints_array" to="traffic_waypoints_array"/>
  <remap from="/red_waypoints_array" to="red_waypoints_array"/>
  <remap from="/green_waypoints_array" to="green_waypoints_array"/>
  <remap from="trajectory" to="plan_trajectory"/>

  <remap from="current_pose" to="/current_pose"/>
  <remap from="current_velocity" to="/vehicle/twist"/>
  <remap from="controller/enable_robotic" to="$(optenv CARMA_INTR_NS)/controller/enable_robotic"/>

  <remap from="guidance_state" to="$(optenv CARMA_GUIDE_NS)/state"/>
  <remap from="maneuver_plan" to="$(optenv CARMA_GUIDE_NS)/arbitrator/final_maneuver_plan"/>

  <remap from="semantic_map" to="$(optenv CARMA_ENV_NS)/semantic_map"/>

  <!-- Launch Guidance Main -->
  <include file="$(find guidance)/launch/guidance_main.launch"/>

  <!-- Launch Arbitrator -->
  <include file="$(find arbitrator)/launch/arbitrator.launch"/>

  <!-- Launch Plan Delegator -->
  <include file="$(find plan_delegator)/launch/plan_delegator.launch"/>

  <!-- TODO Check topic remapping-->
  <!-- Control Stack -->
  <!-- Waypoint Follower Config-->
  <node pkg="rostopic" type="rostopic" name="config_waypoint_follower_rostopic"
        args="pub -l config/waypoint_follower autoware_config_msgs/ConfigWaypointFollower '{ header: auto, param_flag: 0, velocity: 5.0, lookahead_distance: 4.0, lookahead_ratio: 2.0, minimum_lookahead_distance: 6.0, displacement_threshold: 0.0, relative_angle_threshold: 0.0 }' "
  />

  <!-- Trajectory Executor -->
  <include file="$(find trajectory_executor)/launch/trajectory_executor.launch" />


  <remap from="/vehicle_status" to="/vehicle_status"/>
  <remap from="/current_pose" to="current_pose"/>  
  <!-- MPC Follower Wrapper -->
  <include file="$(find mpc_follower_wrapper)/launch/mpc_follower_wrapper.launch" />

  <!-- Twist Filter -->
  <group>
    <remap from="/accel_cmd" to="accel_cmd"/>
    <remap from="/brake_cmd" to="brake_cmd"/>
    <remap from="/ctrl_cmd" to="ctrl_cmd"/>
    <remap from="/decision_maker/state" to="decision_maker/state"/>
    <remap from="/gear_cmd" to="gear_cmd"/>
    <remap from="/twist_cmd" to="twist_cmd"/>
    <remap from="/lamp_cmd" to="lamp_cmd"/>
    <remap from="/mode_cmd" to="mode_cmd"/>
    <remap from="/remote_cmd" to="remote_cmd"/>
    <remap from="/steer_cmd" to="steer_cmd"/>
    <remap from="/ctrl_mode" to="ctrl_mode"/>
    <remap from="/emergency_stop" to="emergency_stop"/>
    <remap from="/state_cmd" to="state_cmd"/>
    <remap from="/vehicle_cmd" to="$(optenv CARMA_INTR_NS)/vehicle_cmd"/>
    <remap from="vehicle_model_wheelbase" to="/vehicle_wheel_base"/>

    <include file="$(find twist_filter)/launch/twist_filter.launch">
        <arg name="lateral_accel_limit" value="2.5"/>
        <arg name="lateral_jerk_limit" value="2.0"/>
        <arg name="lowpass_gain_linear_x" value="0.1"/>
        <arg name="lowpass_gain_steering_angle" value="0.1"/>
    </include>
  </group>

  <!-- Planning Stack -->
  <!-- Waypoint_loader config-->
  <node pkg="rostopic" type="rostopic" name="config_waypoint_replanner_rostopic"
        args="pub -l /config/waypoint_replanner autoware_config_msgs/ConfigWaypointReplanner '{replanning_mode: false, velocity_max: 10.0, velocity_min: 1.0, accel_limit: 0.98, decel_limit: 0.98, radius_thresh: 20.0, radius_min: 6.0, resample_mode: true, resample_interval: 1.0, velocity_offset: 4, end_point_offset: 5}' "
  />
  
  <!-- Waypoint Loader -->
  <node pkg="waypoint_maker" type="waypoint_loader" name="waypoint_loader">
      
  </node>
  <node pkg="waypoint_maker" type="waypoint_replanner" name="waypoint_replanner"/>
  <node pkg="waypoint_maker" type="waypoint_marker_publisher" name="waypoint_marker_publisher" />

  <!-- Lane Planner -->
  <node pkg="lane_planner" type="lane_stop" name="lane_stop"/>
  <node pkg="lane_planner" type="lane_rule" name="lane_rule"/>
  <node pkg="lane_planner" type="lane_select" name="lane_select">
      <remap from="state" to="autoware_state"/>
  </node>

  <!-- AStar Planner -->
  <include file="$(find waypoint_planner)/launch/astar_avoid.launch" />
  <include file="$(find waypoint_planner)/launch/velocity_set.launch" />

  <!-- Autoware Plugin -->
  <include file="$(find autoware_plugin)/launch/autoware_plugin.launch" />

  <!-- Route Generator -->
  <include file="$(find route_generator)/launch/route_generator.launch">
    <arg name="route_file_folder" value="$(arg route_file_folder)"/>
  </include>

</launch>
